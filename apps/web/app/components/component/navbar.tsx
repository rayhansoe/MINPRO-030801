/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/MD3hC6ItIWQ
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Toggle } from '@/components/ui/toggle';
import { Button } from '@/components/ui/button';

import { Moon, Sun, Laptop, Menu, TicketPercent, CircleUser } from 'lucide-react';
import { SheetTrigger, SheetContent, Sheet } from '@/components/ui/sheet';
import { Link } from '@remix-run/react';
import { SVGProps } from 'react';
import { JSX } from 'react/jsx-runtime';

import * as React from 'react';
import { useHydrated } from 'remix-utils/use-hydrated';

import {
  getTheme,
  setTheme as setSystemTheme,
} from '@/components/theme-switcher';

import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu';
import { IUserSession } from '@/types';

export function Navbar() {
  const hydrated = useHydrated();
  const [, rerender] = React.useState({});
  const setTheme = React.useCallback((theme: string) => {
    setSystemTheme(theme);
    rerender({});
  }, []);
  const theme = getTheme();
  return (
    <div className="flex items-center justify-center sticky top-0  h-16 bg-slate-50 text-slate-950 dark:bg-slate-950 dark:text-slate-50 border-b dark:border-b-slate-300/20">
      <header className="container flex items-center justify-between ">
        <div className="flex items-center gap-4">
          {/* <Link className="flex items-center gap-2" to="/">
            <MountainIcon className="h-6 w-6" />
            <span className="text-lg font-semibold">kitabuatevent</span>
          </Link> */}
          <Link
            to="#"
            className="flex items-center gap-2 text-lg font-semibold md:text-base"
          >
            <TicketPercent className="h-7 w-7" />
            <span className="sr-only">kitabuatevent</span>
          </Link>
          <nav className="hidden flex-col gap-6 text-lg font-medium md:flex md:flex-row md:items-center md:gap-5 md:text-sm lg:gap-6">
            <Link
              to="#"
              className="text-muted-foreground transition-colors hover:text-foreground"
            >
              Dashboard
            </Link>
            <Link
              to="#"
              className="text-muted-foreground transition-colors hover:text-foreground"
            >
              Orders
            </Link>
            <Link
              to="#"
              className="text-muted-foreground transition-colors hover:text-foreground"
            >
              Products
            </Link>
            <Link
              to="#"
              className="text-muted-foreground transition-colors hover:text-foreground"
            >
              Customers
            </Link>
            <Link
              to="#"
              className="text-foreground transition-colors hover:text-foreground"
            >
              Settings
            </Link>
          </nav>
        </div>
        <div className="flex items-center gap-4">
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button className="rounded-full" variant="outline" size="icon">
                <Sun className="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0" />
                <Moon className="absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100" />
                <span className="sr-only">Toggle theme</span>
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent className="mt-2">
              <DropdownMenuLabel>Theme</DropdownMenuLabel>
              <DropdownMenuSeparator />
              <DropdownMenuItem asChild>
                <button
                  type="button"
                  className="w-full"
                  onClick={() => setTheme('light')}
                  aria-selected={theme === 'light'}
                >
                  Light
                </button>
              </DropdownMenuItem>
              <DropdownMenuItem asChild>
                <button
                  type="button"
                  className="w-full"
                  onClick={() => setTheme('dark')}
                  aria-selected={theme === 'dark'}
                >
                  Dark
                </button>
              </DropdownMenuItem>
              <DropdownMenuItem asChild>
                <button
                  type="button"
                  className="w-full"
                  onClick={() => setTheme('system')}
                  aria-selected={theme === 'system'}
                >
                  System
                </button>
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
          {true ? (
            <>
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button
                    variant="secondary"
                    size="icon"
                    className="rounded-full"
                  >
                    <CircleUser className="h-5 w-5" />
                    <span className="sr-only">Toggle user menu</span>
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end">
                  <DropdownMenuLabel>My Account</DropdownMenuLabel>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem>Settings</DropdownMenuItem>
                  <DropdownMenuItem>Support</DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem>Logout</DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </>
          ) : (
            <>
              <Button size={'sm'}>
                <Link to={'/signin'}>Signin</Link>
              </Button>
            </>
          )}
          <Sheet>
            <SheetTrigger asChild>
              <Button className="md:hidden" size="icon" variant="ghost">
                <Menu className="h-6 w-6" />
                <span className="sr-only">Toggle navigation</span>
              </Button>
            </SheetTrigger>
            <SheetContent className="w-[300px]" side="right">
              <div className="flex flex-col items-start gap-4 p-4">
                <Toggle
                  aria-label="Toggle dark mode"
                  className="flex md:hidden"
                >
                  <Moon className="h-5 w-5" />
                </Toggle>
                <nav className="flex flex-col items-start gap-2">
                  <Link
                    to="#"
                    className="text-muted-foreground transition-colors hover:text-foreground"
                  >
                    Dashboard
                  </Link>
                  <Link
                    to="#"
                    className="text-muted-foreground transition-colors hover:text-foreground"
                  >
                    Orders
                  </Link>
                  <Link
                    to="#"
                    className="text-muted-foreground transition-colors hover:text-foreground"
                  >
                    Products
                  </Link>
                  <Link
                    to="#"
                    className="text-muted-foreground transition-colors hover:text-foreground"
                  >
                    Customers
                  </Link>
                  <Link
                    to="#"
                    className="text-foreground transition-colors hover:text-foreground"
                  >
                    Settings
                  </Link>
                </nav>
              </div>
            </SheetContent>
          </Sheet>
        </div>
      </header>
    </div>
  );
}

function MountainIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>,
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  );
}
